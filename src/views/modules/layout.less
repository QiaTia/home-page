
.keyframesFunction (@name, @content){// @变量可以写你想要传进这个函数所用的参数
  @keyframes @name{
    @content();//你想要执行的动画效果
  }      
}

.loop(@i) when (@i <= 4){
  @snowname: ~'snow@{i}';
  .keyframesFunction(@snowname, {
    25% {
      transform: translateX(-(@i * 10px));
    }
    50% {
      transform: translateX((@i * 10px));
    }
    75%{
      transform: translateX(-(@i * 10px));
    }
    100%{
      transform: translateX((@i * 10px));
    }
  });
  .loop(@i+1);

}

.loop(1);

.keyframesFunction(fall, {
  25% { top: 0 }
  100%{ top: 100vh }
});
.snow-{
  &animation{
    position: relative;
    width: 100%;
    height: 100vh;
    background-color: #000;
    overflow: hidden;
  }
  &snowflake{
    top: -10px;
    width: 10px;
    height: 10px;
    position: absolute;
    border-radius: 50%;
    animation-iteration-count: infinite;
    background-image: linear-gradient(0,hsla(0,0%,100%,0) 40%,#fff 0,#fff 60%,hsla(0,0%,100%,0) 0),linear-gradient(45deg,hsla(0,0%,100%,0) 43%,#fff 0,#fff 57%,hsla(0,0%,100%,0) 0),linear-gradient(90deg,hsla(0,0%,100%,0) 40%,#fff 0,#fff 60%,hsla(0,0%,100%,0) 0),linear-gradient(135deg,hsla(0,0%,100%,0) 43%,#fff 0,#fff 57%,hsla(0,0%,100%,0) 0);
  }
}
/** 文章样式 */
.article-list{
  margin: 20px auto;
  margin-top: 16px;
  border: 1px solid var(--border-color);
  background-color: var(--bg-color-grey);
  box-shadow: 0 3px 8px -6px rgba(0,0,0,.1);
  border-radius: var(--border-radius);
  overflow: hidden;
  margin-bottom: 16px;
  text-align: center;
  .ant-spin{
    margin: 100px;
  }
  .article{
    transition: All .3s ease-in-out;
    padding: 4px 8px;
    text-align: left;
    &+.article{border-top: 1px solid var(--border-color)}
    .entry-title {
      line-height: 2.4;
      font-family: inherit;
      font-weight: 400;
      font-size: 18px;
      // line-height: 1.8;
    }
    .entry-content {
      span{ margin: .5em }
      font-size: 14px;
      padding-bottom: .4em;
      overflow: hidden;
      text-overflow: clip;
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
    }
  }
}
.article-menu{
  margin-top: 16px;
  padding: 0 16px;
  border: 1px solid var(--border-color);
  background-color: var(--bg-color-grey);
  border-radius: var(--border-radius);
}
/** 上传组件 */
.upload-dragger{
  background-color: var(--bg-color-grey);
  cursor: pointer;
  display: block;
  border-radius: var(--border-radius);
  border: var(--border-color) dashed 1px;
  transition: all .2s;
  &:hover, &.active{
    color: var(--primary-color);
    border-color: var(--primary-color);
  }
  &-icon{
    font-size: 48px;
  }
  &-text{
    padding-bottom: 1em;
  }
  input{
    display: none;
  }
}
/** 输入框 */
.el-input{
  width: 100%;
  border-radius: var(--border-radius);
  border: solid 1px var(--border-color);
  background-color: white;
  &:hover, &:focus{
    border-color: var(--primary-color);
  }
  &.textarea{
    textarea{
      resize: none;
      width: 100%;
      height: 100%;
      padding: 8px;
    }
  }
}
/** */
.modal-scroll{
  display: flex;
  flex-direction: column;
  background-color: var(--border-color);
  width: 2em;
  height: 2.4em;
  align-items: center;
  border-radius: .2em;
  justify-content: space-between;
  padding: .2em;
  padding-top: .4em;
  font-size: 50px;
  cursor: pointer;
  &:hover {
    filter: drop-shadow(0 0 24px var(--primary-color));
  }
  span{
    font-size: .4em;
  }
  & + .modal-scroll{
    margin-left: .6em
  }
  &-item{
    ul{
      flex: 1;
      text-align: center;
      transition:all .3s ease
    }
    li{ list-style: none;line-height:1em }
    width: 100%;
    height: 1em;
    display: flex;
    overflow:hidden
  }
}
/** base64 */
.base64-{
  &wrap{
    background-color: var(--bg-color-grey);
    border-radius: var(--border-radius);
    padding: 16px;
    margin-top: 28px;
  }
  &footer{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    .btn{ margin-top: 12px }
  }
}